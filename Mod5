package com.example;
public class Fibonacci {

    // Recursive implementation
    public static int fibonacciRecursive(int n) {
        if (n <= 1)
            return n;
        return fibonacciRecursive(n - 1) + fibonacciRecursive(n - 2);
    }

    // Iterative implementation
    public static int fibonacciIterative(int n) {
        if (n <= 1)
            return n;

        int prev1 = 0;
        int prev2 = 1;
        int fib = 0;

        for (int i = 2; i <= n; i++) {
            fib = prev1 + prev2;
            prev1 = prev2;
            prev2 = fib;
        }

        return fib;
    }

    public static void main(String[] args) {
        // Test the implementations
        System.out.println("n\tRecursive\tIterative");
        for (int n = 0; n <= 10; n++) {
            long startTime = System.nanoTime();
            int recursiveResult = fibonacciRecursive(n);
            long recursiveTime = System.nanoTime() - startTime;

            startTime = System.nanoTime();
            int iterativeResult = fibonacciIterative(n);
            long iterativeTime = System.nanoTime() - startTime;

            System.out.println(n + "\t" + recursiveTime + " ns\t" + iterativeTime + " ns");
        }
    }
}
